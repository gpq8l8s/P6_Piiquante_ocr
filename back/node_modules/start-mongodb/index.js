const event = require('events');
const cp = require('child_process');
var Mongo = require('mongodb');
var MongoClient = Mongo.MongoClient;

class startMongoDB extends event {
    constructor(dbPath='D:/MongoDB/data/mydb', options){
        super(options);
        this.database = null;
        this.dbPath = dbPath;
        this.dbStartup();
    }

    dbStartup(){
        let db = cp.spawn('mongod', [`--dbpath=${this.dbPath}`]);
            this.database = db;

            db.on('error',(err)=>{
                console.error("Error: You need to add Mongoâ€™s bin folder to the Path Environment Variable!")
            })
        
            db.stdout.on('data', (data) => {
                // console.log("data:",data.toString());
                if(data.indexOf("waiting for connections on port") !== -1){
                    console.info("Info: Mongodb Started!")
                    this.emit('readyGo');
                }else if(data.indexOf("make sure that another mongod instance is not already running") !== -1){
                    console.info("Info: MongoDB has already been started!");
                    this.emit('readyGo');
                }else if(data.indexOf("NonExistentPath") !== -1){
                    console.error(`Error: Data directory "${this.dbPath}" not found...now exited.`);
                }
            });
    }

    connect(url="mongodb://localhost"){
        return new Promise((resolve,reject)=>{
            this.once('readyGo',()=>{
                MongoClient.connect(url, { useNewUrlParser: true }).then(
                    (client) => {
                        console.info("Info: Connected with MongoDB!");
                        resolve(client);
                    }
                ).catch((err)=>{
                    reject(err);
                    setTimeout(()=>process.exit());
                })
            });
        });
    }
}

module.exports = { 
    start: (path)=>new startMongoDB(path),
    ...Mongo
};





